{"input": "What was the name of the Norman castle?", "result": "Some Normans joined Turkish forces to aid in the destruction of the Armenians vassal-states of Sassoun and Taron in far eastern Anatolia. Later, many took up service with the Armenian state further south in Cilicia and the Taurus Mountains. A Norman named Oursel led a force of \"Franks\" into the upper Euphrates valley in northern Syria. From 1073 to 1074, 8,000 of the 20,000 troops of the Armenian general Philaretus Brachamius were Normans\u2014formerly of Oursel\u2014led by Raimbaud. They even lent their ethnicity to the name of their castle: Afranji, meaning \"Franks.\" The known trade between Amalfi and Antioch and between Bari and Tarsus may be related to the presence of Italo-Normans in those cities while Amalfi and Bari were under Norman rule in Italy.", "question_id": "56de10b44396321400ee2593", "passage_id": "f5f7d221-64a2-4a4f-b916-c5bc1cb5eaaa", "answer": "Afranji", "title": "Normans"}
{"input": "Intractable problems lacking polynomial time solutions necessarily negate the practical efficacy of what type of algorithm?", "result": "Problems that can be solved in theory (e.g., given large but finite time), but which in practice take too long for their solutions to be useful, are known as intractable problems. In complexity theory, problems that lack polynomial-time solutions are considered to be intractable for more than the smallest inputs. In fact, the Cobham\u2013Edmonds thesis states that only those problems that can be solved in polynomial time can be feasibly computed on some computational device. Problems that are known to be intractable in this sense include those that are EXPTIME-hard. If NP is not the same as P, then the NP-complete problems are also intractable in this sense. To see why exponential-time algorithms might be unusable in practice, consider a program that makes 2n operations before halting. For small n, say 100, and assuming for the sake of example that the computer does 1012 operations each second, the program would run for about 4 \u00d7 1010 years, which is the same order of magnitude as the age of the universe. Even with a much faster computer, the program would only be useful for very small instances and in that sense the intractability of a problem is somewhat independent of technological progress. Nevertheless, a polynomial time algorithm is not always practical. If its running time is, say, n15, it is unreasonable to consider it efficient and it is still useless except on small instances.", "question_id": "56e1fc57e3433e140042322f", "passage_id": "1bffc4e4-addc-44df-92a9-be07af37a2d7", "answer": "exponential-time algorithms", "title": "Computational_complexity_theory"}
{"input": "What kind of problems are one of the main topics studied in computational complexity theory?", "result": "Decision problems are one of the central objects of study in computational complexity theory. A decision problem is a special type of computational problem whose answer is either yes or no, or alternately either 1 or 0. A decision problem can be viewed as a formal language, where the members of the language are instances whose output is yes, and the non-members are those instances whose output is no. The objective is to decide, with the aid of an algorithm, whether a given input string is a member of the formal language under consideration. If the algorithm deciding this problem returns the answer yes, the algorithm is said to accept the input string, otherwise it is said to reject the input.", "question_id": "56e190bce3433e1400422fc8", "passage_id": "05cc2108-1875-41a2-b689-3dd64f313cfb", "answer": "Decision problems", "title": "Computational_complexity_theory"}
{"input": "In what century did important classical music developments occur in Normandy?", "result": "Normandy was the site of several important developments in the history of classical music in the 11th century. F\u00e9camp Abbey and Saint-Evroul Abbey were centres of musical production and education. At F\u00e9camp, under two Italian abbots, William of Volpiano and John of Ravenna, the system of denoting notes by letters was developed and taught. It is still the most common form of pitch representation in English- and German-speaking countries today. Also at F\u00e9camp, the staff, around which neumes were oriented, was first developed and taught in the 11th century. Under the German abbot Isembard, La Trinit\u00e9-du-Mont became a centre of musical composition.", "question_id": "56de51c64396321400ee27f7", "passage_id": "98a63a83-2cbd-4dfe-8e48-a228afe2f7a7", "answer": "11th", "title": "Normans"}
{"input": "Complexity theory classifies problems based on what primary attribute?", "result": "For a precise definition of what it means to solve a problem using a given amount of time and space, a computational model such as the deterministic Turing machine is used. The time required by a deterministic Turing machine M on input x is the total number of state transitions, or steps, the machine makes before it halts and outputs the answer (\"yes\" or \"no\"). A Turing machine M is said to operate within time f(n), if the time required by M on each input of length n is at most f(n). A decision problem A can be solved in time f(n) if there exists a Turing machine operating in time f(n) that solves the problem. Since complexity theory is interested in classifying problems based on their difficulty, one defines sets of problems based on some criteria. For instance, the set of problems solvable within time f(n) on a deterministic Turing machine is then denoted by DTIME(f(n)).", "question_id": "56e1b62ecd28a01900c67aa4", "passage_id": "ce145e67-608f-4d4f-92bb-ee21613e5dde", "answer": "difficulty", "title": "Computational_complexity_theory"}
{"input": "A multi-tape Turing machine requires what type of time for a solution?", "result": "But bounding the computation time above by some concrete function f(n) often yields complexity classes that depend on the chosen machine model. For instance, the language {xx | x is any binary string} can be solved in linear time on a multi-tape Turing machine, but necessarily requires quadratic time in the model of single-tape Turing machines. If we allow polynomial variations in running time, Cobham-Edmonds thesis states that \"the time complexities in any two reasonable and general models of computation are polynomially related\" (Goldreich 2008, Chapter 1.2). This forms the basis for the complexity class P, which is the set of decision problems solvable by a deterministic Turing machine within polynomial time. The corresponding set of function problems is FP.", "question_id": "56e1c2eee3433e1400423135", "passage_id": "948d365c-466e-451a-8cab-0beef9109ca1", "answer": "linear time", "title": "Computational_complexity_theory"}
{"input": "The traveling salesman problem is an example of what type of problem?", "result": "A function problem is a computational problem where a single output (of a total function) is expected for every input, but the output is more complex than that of a decision problem, that is, it isn't just yes or no. Notable examples include the traveling salesman problem and the integer factorization problem.", "question_id": "56e19724cd28a01900c679f8", "passage_id": "8dfd1083-eb63-493e-a299-deec1578fb64", "answer": "A function problem", "title": "Computational_complexity_theory"}
{"input": "What is the foundation for separation results within complexity classes?", "result": "The time and space hierarchy theorems form the basis for most separation results of complexity classes. For instance, the time hierarchy theorem tells us that P is strictly contained in EXPTIME, and the space hierarchy theorem tells us that L is strictly contained in PSPACE.", "question_id": "56e1c7e2cd28a01900c67b74", "passage_id": "0126c2d8-a171-4e6c-9e0b-3b0beeb39fbe", "answer": "time and space hierarchy theorems", "title": "Computational_complexity_theory"}
{"input": "What architecture type came after Norman in England?", "result": "In England, the period of Norman architecture immediately succeeds that of the Anglo-Saxon and precedes the Early Gothic. In southern Italy, the Normans incorporated elements of Islamic, Lombard, and Byzantine building techniques into their own, initiating a unique style known as Norman-Arab architecture within the Kingdom of Sicily.", "question_id": "56de4b074396321400ee2793", "passage_id": "1821319c-28b5-4653-bc04-38f61d73e096", "answer": "Early Gothic", "title": "Normans"}
{"input": "If input size is is equal to n, what can respectively be assumed is the function of n?", "result": "If the input size is n, the time taken can be expressed as a function of n. Since the time taken on different inputs of the same size can be different, the worst-case time complexity T(n) is defined to be the maximum time taken over all inputs of size n. If T(n) is a polynomial in n, then the algorithm is said to be a polynomial time algorithm. Cobham's thesis says that a problem can be solved with a feasible amount of resources if it admits a polynomial time algorithm.", "question_id": "56e1a564cd28a01900c67a49", "passage_id": "67831472-3096-422a-80f4-c897fdd6aad5", "answer": "the time taken", "title": "Computational_complexity_theory"}
{"input": "By what main attribute are computational problems classified utilizing computational complexity theory? ", "result": "Computational complexity theory is a branch of the theory of computation in theoretical computer science that focuses on classifying computational problems according to their inherent difficulty, and relating those classes to each other. A computational problem is understood to be a task that is in principle amenable to being solved by a computer, which is equivalent to stating that the problem may be solved by mechanical application of mathematical steps, such as an algorithm.", "question_id": "56e16182e3433e1400422e29", "passage_id": "0151d606-215d-4ab3-b7a0-68fc75cdd41c", "answer": "inherent difficulty", "title": "Computational_complexity_theory"}
{"input": "The complexity of problems often depends on what?", "result": "This motivates the concept of a problem being hard for a complexity class. A problem X is hard for a class of problems C if every problem in C can be reduced to X. Thus no problem in C is harder than X, since an algorithm for X allows us to solve any problem in C. Of course, the notion of hard problems depends on the type of reduction being used. For complexity classes larger than P, polynomial-time reductions are commonly used. In particular, the set of problems that are hard for NP is the set of NP-hard problems.", "question_id": "56e1ce08e3433e14004231a4", "passage_id": "50c83783-d64f-4746-87e0-133deacb510a", "answer": "the type of reduction being used", "title": "Computational_complexity_theory"}
{"input": "What hypothesis is associated with the complexity class of P viewed as a mathematical abstraction with efficient algorithmic functionality?", "result": "The complexity class P is often seen as a mathematical abstraction modeling those computational tasks that admit an efficient algorithm. This hypothesis is called the Cobham\u2013Edmonds thesis. The complexity class NP, on the other hand, contains many problems that people would like to solve efficiently, but for which no efficient algorithm is known, such as the Boolean satisfiability problem, the Hamiltonian path problem and the vertex cover problem. Since deterministic Turing machines are special non-deterministic Turing machines, it is easily observed that each problem in P is also member of the class NP.", "question_id": "56e1dc62cd28a01900c67bcb", "passage_id": "54a57d69-7098-4cd3-a23b-efa818ca1283", "answer": "Cobham\u2013Edmonds thesis", "title": "Computational_complexity_theory"}
{"input": "What tradition were the Saint-Evroul monks known for?", "result": "At Saint Evroul, a tradition of singing had developed and the choir achieved fame in Normandy. Under the Norman abbot Robert de Grantmesnil, several monks of Saint-Evroul fled to southern Italy, where they were patronised by Robert Guiscard and established a Latin monastery at Sant'Eufemia. There they continued the tradition of singing.", "question_id": "56de52614396321400ee27fe", "passage_id": "967a1b77-b80e-4d8e-a720-e0826a961344", "answer": "singing", "title": "Normans"}
{"input": "What was the naval base called?", "result": "The further decline of Byzantine state-of-affairs paved the road to a third attack in 1185, when a large Norman army invaded Dyrrachium, owing to the betrayal of high Byzantine officials. Some time later, Dyrrachium\u2014one of the most important naval bases of the Adriatic\u2014fell again to Byzantine hands.", "question_id": "56de1563cffd8e1900b4b5c3", "passage_id": "50c86f9a-296b-4e98-b878-b2c73e2757b0", "answer": "Dyrrachium", "title": "Normans"}
{"input": "What answer denotes that an algorithm has accepted an input string?", "result": "Decision problems are one of the central objects of study in computational complexity theory. A decision problem is a special type of computational problem whose answer is either yes or no, or alternately either 1 or 0. A decision problem can be viewed as a formal language, where the members of the language are instances whose output is yes, and the non-members are those instances whose output is no. The objective is to decide, with the aid of an algorithm, whether a given input string is a member of the formal language under consideration. If the algorithm deciding this problem returns the answer yes, the algorithm is said to accept the input string, otherwise it is said to reject the input.", "question_id": "56e190bce3433e1400422fcc", "passage_id": "05cc2108-1875-41a2-b689-3dd64f313cfb", "answer": "yes", "title": "Computational_complexity_theory"}
{"input": "Who used the church to unify themselves?", "result": "In the visual arts, the Normans did not have the rich and distinctive traditions of the cultures they conquered. However, in the early 11th century the dukes began a programme of church reform, encouraging the Cluniac reform of monasteries and patronising intellectual pursuits, especially the proliferation of scriptoria and the reconstitution of a compilation of lost illuminated manuscripts. The church was utilised by the dukes as a unifying force for their disparate duchy. The chief monasteries taking part in this \"renaissance\" of Norman art and scholarship were Mont-Saint-Michel, F\u00e9camp, Jumi\u00e8ges, Bec, Saint-Ouen, Saint-Evroul, and Saint-Wandrille. These centres were in contact with the so-called \"Winchester school\", which channeled a pure Carolingian artistic tradition to Normandy. In the final decade of the 11th and first of the 12th century, Normandy experienced a golden age of illustrated manuscripts, but it was brief and the major scriptoria of Normandy ceased to function after the midpoint of the century.", "question_id": "56de4b5c4396321400ee279a", "passage_id": "26a15abd-f1fd-4480-9ab8-e2922b582bfa", "answer": "dukes", "title": "Normans"}
{"input": "What was the name of Bohemond's nephew?", "result": "In 1096, Crusaders passing by the siege of Amalfi were joined by Bohemond of Taranto and his nephew Tancred with an army of Italo-Normans. Bohemond was the de facto leader of the Crusade during its passage through Asia Minor. After the successful Siege of Antioch in 1097, Bohemond began carving out an independent principality around that city. Tancred was instrumental in the conquest of Jerusalem and he worked for the expansion of the Crusader kingdom in Transjordan and the region of Galilee.[citation needed]", "question_id": "56de3ebc4396321400ee26e7", "passage_id": "70e77e2d-85f0-4684-afdc-894a0028f9ab", "answer": "Tancred", "title": "Normans"}
{"input": "The hardest problems in NP can be analogously written as what class of problems?", "result": "If a problem X is in C and hard for C, then X is said to be complete for C. This means that X is the hardest problem in C. (Since many problems could be equally hard, one might say that X is one of the hardest problems in C.) Thus the class of NP-complete problems contains the most difficult problems in NP, in the sense that they are the ones most likely not to be in P. Because the problem P = NP is not solved, being able to reduce a known NP-complete problem, \u03a02, to another problem, \u03a01, would indicate that there is no known polynomial-time solution for \u03a01. This is because a polynomial-time solution to \u03a01 would yield a polynomial-time solution to \u03a02. Similarly, because all NP problems can be reduced to the set, finding an NP-complete problem that can be solved in polynomial time would mean that P = NP.", "question_id": "56e1d9fee3433e14004231cb", "passage_id": "3604cb9a-b387-4a82-95c5-8d9bbb0963f7", "answer": "NP-complete", "title": "Computational_complexity_theory"}
{"input": "What type of Turing machine can be characterized by checking multiple possibilities at the same time?", "result": "However, some computational problems are easier to analyze in terms of more unusual resources. For example, a non-deterministic Turing machine is a computational model that is allowed to branch out to check many different possibilities at once. The non-deterministic Turing machine has very little to do with how we physically want to compute algorithms, but its branching exactly captures many of the mathematical models we want to analyze, so that non-deterministic time is a very important resource in analyzing computational problems.", "question_id": "56e1b355e3433e14004230b0", "passage_id": "414d14ed-c0ba-4609-a75c-000afe130778", "answer": "non-deterministic", "title": "Computational_complexity_theory"}
{"input": "What is the prize offered for finding a solution to P=NP?", "result": "The question of whether P equals NP is one of the most important open questions in theoretical computer science because of the wide implications of a solution. If the answer is yes, many important problems can be shown to have more efficient solutions. These include various types of integer programming problems in operations research, many problems in logistics, protein structure prediction in biology, and the ability to find formal proofs of pure mathematics theorems. The P versus NP problem is one of the Millennium Prize Problems proposed by the Clay Mathematics Institute. There is a US$1,000,000 prize for resolving the problem.", "question_id": "56e1ddfce3433e14004231d8", "passage_id": "c7753f54-aa7d-4939-a7f5-49c25616d28c", "answer": "$1,000,000", "title": "Computational_complexity_theory"}
{"input": "Who was Margaret's brother?", "result": "One of the claimants of the English throne opposing William the Conqueror, Edgar Atheling, eventually fled to Scotland. King Malcolm III of Scotland married Edgar's sister Margaret, and came into opposition to William who had already disputed Scotland's southern borders. William invaded Scotland in 1072, riding as far as Abernethy where he met up with his fleet of ships. Malcolm submitted, paid homage to William and surrendered his son Duncan as a hostage, beginning a series of arguments as to whether the Scottish Crown owed allegiance to the King of England.", "question_id": "56de17f9cffd8e1900b4b5e0", "passage_id": "eec01303-c7d4-4271-afa8-46f4d1331c49", "answer": "Edgar", "title": "Normans"}
{"input": "Who was Richard's fiancee?", "result": "In April 1191 Richard the Lion-hearted left Messina with a large fleet in order to reach Acre. But a storm dispersed the fleet. After some searching, it was discovered that the boat carrying his sister and his fianc\u00e9e Berengaria was anchored on the south coast of Cyprus, together with the wrecks of several other ships, including the treasure ship. Survivors of the wrecks had been taken prisoner by the island's despot Isaac Komnenos. On 1 May 1191, Richard's fleet arrived in the port of Limassol on Cyprus. He ordered Isaac to release the prisoners and the treasure. Isaac refused, so Richard landed his troops and took Limassol.", "question_id": "56de3f784396321400ee26fb", "passage_id": "b1b04ff8-9c31-4e75-8a93-a2ae9764b9bf", "answer": "Berengaria", "title": "Normans"}
{"input": "What is the name for a problem that meets Ladner's assertion?", "result": "It was shown by Ladner that if P \u2260 NP then there exist problems in NP that are neither in P nor NP-complete. Such problems are called NP-intermediate problems. The graph isomorphism problem, the discrete logarithm problem and the integer factorization problem are examples of problems believed to be NP-intermediate. They are some of the very few NP problems not known to be in P or to be NP-complete.", "question_id": "56e1ded7cd28a01900c67bd5", "passage_id": "7996150b-b430-41f3-8a32-f4a959b2ca1d", "answer": "NP-intermediate problems", "title": "Computational_complexity_theory"}
{"input": "NP complete problems contain the lowest likelihood of being located in what problem class?", "result": "If a problem X is in C and hard for C, then X is said to be complete for C. This means that X is the hardest problem in C. (Since many problems could be equally hard, one might say that X is one of the hardest problems in C.) Thus the class of NP-complete problems contains the most difficult problems in NP, in the sense that they are the ones most likely not to be in P. Because the problem P = NP is not solved, being able to reduce a known NP-complete problem, \u03a02, to another problem, \u03a01, would indicate that there is no known polynomial-time solution for \u03a01. This is because a polynomial-time solution to \u03a01 would yield a polynomial-time solution to \u03a02. Similarly, because all NP problems can be reduced to the set, finding an NP-complete problem that can be solved in polynomial time would mean that P = NP.", "question_id": "56e1d9fee3433e14004231cc", "passage_id": "3604cb9a-b387-4a82-95c5-8d9bbb0963f7", "answer": "NP", "title": "Computational_complexity_theory"}
{"input": "In what expression can one expect to find DTIME(n)", "result": "For the complexity classes defined in this way, it is desirable to prove that relaxing the requirements on (say) computation time indeed defines a bigger set of problems. In particular, although DTIME(n) is contained in DTIME(n2), it would be interesting to know if the inclusion is strict. For time and space requirements, the answer to such questions is given by the time and space hierarchy theorems respectively. They are called hierarchy theorems because they induce a proper hierarchy on the classes defined by constraining the respective resources. Thus there are pairs of complexity classes such that one is properly included in the other. Having deduced such proper set inclusions, we can proceed to make quantitative statements about how much more additional time or space is needed in order to increase the number of problems that can be solved.", "question_id": "56e1c720e3433e140042316b", "passage_id": "453e6c9e-3d98-4778-8e06-adf4c3f89a30", "answer": "DTIME(n2)", "title": "Computational_complexity_theory"}
{"input": "Who did Rollo sign the treaty of Saint-Clair-sur-Epte with?", "result": "In the course of the 10th century, the initially destructive incursions of Norse war bands into the rivers of France evolved into more permanent encampments that included local women and personal property. The Duchy of Normandy, which began in 911 as a fiefdom, was established by the treaty of Saint-Clair-sur-Epte between King Charles III of West Francia and the famed Viking ruler Rollo, and was situated in the former Frankish kingdom of Neustria. The treaty offered Rollo and his men the French lands between the river Epte and the Atlantic coast in exchange for their protection against further Viking incursions. The area corresponded to the northern part of present-day Upper Normandy down to the river Seine, but the Duchy would eventually extend west beyond the Seine. The territory was roughly equivalent to the old province of Rouen, and reproduced the Roman administrative structure of Gallia Lugdunensis II (part of the former Gallia Lugdunensis).", "question_id": "56dde0ba66d3e219004dad76", "passage_id": "c21a8850-da63-4c77-bb14-8acc52e0db06", "answer": "King Charles III", "title": "Normans"}
{"input": "What is the expression used to identify any given series of problems capable of being solved within time on a deterministic Turing machine?", "result": "For a precise definition of what it means to solve a problem using a given amount of time and space, a computational model such as the deterministic Turing machine is used. The time required by a deterministic Turing machine M on input x is the total number of state transitions, or steps, the machine makes before it halts and outputs the answer (\"yes\" or \"no\"). A Turing machine M is said to operate within time f(n), if the time required by M on each input of length n is at most f(n). A decision problem A can be solved in time f(n) if there exists a Turing machine operating in time f(n) that solves the problem. Since complexity theory is interested in classifying problems based on their difficulty, one defines sets of problems based on some criteria. For instance, the set of problems solvable within time f(n) on a deterministic Turing machine is then denoted by DTIME(f(n)).", "question_id": "56e1b62ecd28a01900c67aa5", "passage_id": "ce145e67-608f-4d4f-92bb-ee21613e5dde", "answer": "DTIME(f(n))", "title": "Computational_complexity_theory"}
{"input": "Who was the most influential researcher among those grappling with the deficit of work surrounding the complexity posed by algorithmic problems?", "result": "Before the actual research explicitly devoted to the complexity of algorithmic problems started off, numerous foundations were laid out by various researchers. Most influential among these was the definition of Turing machines by Alan Turing in 1936, which turned out to be a very robust and flexible simplification of a computer.", "question_id": "56e200e4cd28a01900c67c15", "passage_id": "c8df93c5-33ca-4c89-9e95-5887bad125ca", "answer": "Alan Turing", "title": "Computational_complexity_theory"}
{"input": "What is the most commonplace model utilized in complexity theory?", "result": "A Turing machine is a mathematical model of a general computing machine. It is a theoretical device that manipulates symbols contained on a strip of tape. Turing machines are not intended as a practical computing technology, but rather as a thought experiment representing a computing machine\u2014anything from an advanced supercomputer to a mathematician with a pencil and paper. It is believed that if a problem can be solved by an algorithm, there exists a Turing machine that solves the problem. Indeed, this is the statement of the Church\u2013Turing thesis. Furthermore, it is known that everything that can be computed on other models of computation known to us today, such as a RAM machine, Conway's Game of Life, cellular automata or any programming language can be computed on a Turing machine. Since Turing machines are easy to analyze mathematically, and are believed to be as powerful as any other model of computation, the Turing machine is the most commonly used model in complexity theory.", "question_id": "56e1aba0e3433e1400423097", "passage_id": "1de8faf7-bed9-4ad5-ad24-270b907986ff", "answer": "the Turing machine", "title": "Computational_complexity_theory"}
{"input": "The reasons for the las two counties to be added are based on what?", "result": "Southern California, often abbreviated SoCal, is a geographic and cultural region that generally comprises California's southernmost 10 counties. The region is traditionally described as \"eight counties\", based on demographics and economic ties: Imperial, Los Angeles, Orange, Riverside, San Bernardino, San Diego, Santa Barbara, and Ventura. The more extensive 10-county definition, including Kern and San Luis Obispo counties, is also used based on historical political divisions. Southern California is a major economic center for the state of California and the United States.", "question_id": "5705e26d75f01819005e76d8", "passage_id": "bc865c9b-e43b-4bec-9b2a-4495522cb762", "answer": "historical political divisions", "title": "Southern_California"}
{"input": "What encoding decision needs to be made in order to determine an exact definition of the formal language?", "result": "An example of a decision problem is the following. The input is an arbitrary graph. The problem consists in deciding whether the given graph is connected, or not. The formal language associated with this decision problem is then the set of all connected graphs\u2014of course, to obtain a precise definition of this language, one has to decide how graphs are encoded as binary strings.", "question_id": "56e19557e3433e1400422ff1", "passage_id": "ada70f84-d17a-4617-a43f-c3ef91022e90", "answer": "how graphs are encoded as binary strings", "title": "Computational_complexity_theory"}
{"input": "What is an example of a problem to which effective algorithms have provided a solution in spite of the intractability associated with the breadth of sizes?", "result": "What intractability means in practice is open to debate. Saying that a problem is not in P does not imply that all large cases of the problem are hard or even that most of them are. For example, the decision problem in Presburger arithmetic has been shown not to be in P, yet algorithms have been written that solve the problem in reasonable times in most cases. Similarly, algorithms can solve the NP-complete knapsack problem over a wide range of sizes in less than quadratic time and SAT solvers routinely handle large instances of the NP-complete Boolean satisfiability problem.", "question_id": "56e1febfe3433e1400423238", "passage_id": "9e0c5bbb-6d28-4de4-a1a4-7eaf291de4a9", "answer": "NP-complete knapsack problem", "title": "Computational_complexity_theory"}
{"input": "Who made Ralph earl?", "result": "Even before the Norman Conquest of England, the Normans had come into contact with Wales. Edward the Confessor had set up the aforementioned Ralph as earl of Hereford and charged him with defending the Marches and warring with the Welsh. In these original ventures, the Normans failed to make any headway into Wales.", "question_id": "56de3d594396321400ee26cc", "passage_id": "a3eeeccd-c379-409f-b94a-6cee8e3a531f", "answer": "Edward the Confessor", "title": "Normans"}
{"input": "What were the origins of the Raouliii family?", "result": "Several families of Byzantine Greece were of Norman mercenary origin during the period of the Comnenian Restoration, when Byzantine emperors were seeking out western European warriors. The Raoulii were descended from an Italo-Norman named Raoul, the Petraliphae were descended from a Pierre d'Aulps, and that group of Albanian clans known as the Maniakates were descended from Normans who served under George Maniaces in the Sicilian expedition of 1038.", "question_id": "56de11154396321400ee25aa", "passage_id": "0de0f3cd-408e-403e-8784-c69e46d30a27", "answer": "Norman mercenary", "title": "Normans"}
{"input": "Who was Emma's brother?", "result": "The Normans were in contact with England from an early date. Not only were their original Viking brethren still ravaging the English coasts, they occupied most of the important ports opposite England across the English Channel. This relationship eventually produced closer ties of blood through the marriage of Emma, sister of Duke Richard II of Normandy, and King Ethelred II of England. Because of this, Ethelred fled to Normandy in 1013, when he was forced from his kingdom by Sweyn Forkbeard. His stay in Normandy (until 1016) influenced him and his sons by Emma, who stayed in Normandy after Cnut the Great's conquest of the isle.", "question_id": "56de15dbcffd8e1900b4b5c9", "passage_id": "3c81018e-d4fc-46e4-a014-0b1b084592f5", "answer": "Duke Richard II", "title": "Normans"}
{"input": "Who was Margaret's husband?", "result": "One of the claimants of the English throne opposing William the Conqueror, Edgar Atheling, eventually fled to Scotland. King Malcolm III of Scotland married Edgar's sister Margaret, and came into opposition to William who had already disputed Scotland's southern borders. William invaded Scotland in 1072, riding as far as Abernethy where he met up with his fleet of ships. Malcolm submitted, paid homage to William and surrendered his son Duncan as a hostage, beginning a series of arguments as to whether the Scottish Crown owed allegiance to the King of England.", "question_id": "56de17f9cffd8e1900b4b5e1", "passage_id": "eec01303-c7d4-4271-afa8-46f4d1331c49", "answer": "King Malcolm III of Scotland", "title": "Normans"}
{"input": "Who led Richard's troops when Cyprus was conquered?", "result": "Various princes of the Holy Land arrived in Limassol at the same time, in particular Guy de Lusignan. All declared their support for Richard provided that he support Guy against his rival Conrad of Montferrat. The local barons abandoned Isaac, who considered making peace with Richard, joining him on the crusade, and offering his daughter in marriage to the person named by Richard. But Isaac changed his mind and tried to escape. Richard then proceeded to conquer the whole island, his troops being led by Guy de Lusignan. Isaac surrendered and was confined with silver chains, because Richard had promised that he would not place him in irons. By 1 June, Richard had conquered the whole island. His exploit was well publicized and contributed to his reputation; he also derived significant financial gains from the conquest of the island. Richard left for Acre on 5 June, with his allies. Before his departure, he named two of his Norman generals, Richard de Camville and Robert de Thornham, as governors of Cyprus.", "question_id": "56de40da4396321400ee270a", "passage_id": "8f42ecdb-7fdb-49f3-bed5-6867b20eaba8", "answer": "Guy de Lusignan", "title": "Normans"}
{"input": "Who was the Normans' main enemy in Italy, the Byzantine Empire and Armenia?", "result": "Soon after the Normans began to enter Italy, they entered the Byzantine Empire and then Armenia, fighting against the Pechenegs, the Bulgars, and especially the Seljuk Turks. Norman mercenaries were first encouraged to come to the south by the Lombards to act against the Byzantines, but they soon fought in Byzantine service in Sicily. They were prominent alongside Varangian and Lombard contingents in the Sicilian campaign of George Maniaces in 1038\u201340. There is debate whether the Normans in Greek service actually were from Norman Italy, and it now seems likely only a few came from there. It is also unknown how many of the \"Franks\", as the Byzantines called them, were Normans and not other Frenchmen.", "question_id": "56de0f6a4396321400ee257f", "passage_id": "149888c2-d00e-4801-a6f4-dbad940ace4f", "answer": "Seljuk Turks", "title": "Normans"}
{"input": "What are two basic primary resources used to guage complexity?", "result": "A problem is regarded as inherently difficult if its solution requires significant resources, whatever the algorithm used. The theory formalizes this intuition, by introducing mathematical models of computation to study these problems and quantifying the amount of resources needed to solve them, such as time and storage. Other complexity measures are also used, such as the amount of communication (used in communication complexity), the number of gates in a circuit (used in circuit complexity) and the number of processors (used in parallel computing). One of the roles of computational complexity theory is to determine the practical limits on what computers can and cannot do.", "question_id": "56e16839cd28a01900c67889", "passage_id": "bf156c46-a111-42f7-a4aa-9b798432f2f9", "answer": "time and storage", "title": "Computational_complexity_theory"}
{"input": "What is an example of an NP-intermediate problem not known to exist in P or NP-complete? ", "result": "It was shown by Ladner that if P \u2260 NP then there exist problems in NP that are neither in P nor NP-complete. Such problems are called NP-intermediate problems. The graph isomorphism problem, the discrete logarithm problem and the integer factorization problem are examples of problems believed to be NP-intermediate. They are some of the very few NP problems not known to be in P or to be NP-complete.", "question_id": "56e1ded7cd28a01900c67bd6", "passage_id": "7996150b-b430-41f3-8a32-f4a959b2ca1d", "answer": "graph isomorphism problem", "title": "Computational_complexity_theory"}
{"input": "That there currently exists no known integer factorization problem underpins what commonly used system?", "result": "The integer factorization problem is the computational problem of determining the prime factorization of a given integer. Phrased as a decision problem, it is the problem of deciding whether the input has a factor less than k. No efficient integer factorization algorithm is known, and this fact forms the basis of several modern cryptographic systems, such as the RSA algorithm. The integer factorization problem is in NP and in co-NP (and even in UP and co-UP). If the problem is NP-complete, the polynomial time hierarchy will collapse to its first level (i.e., NP will equal co-NP). The best known algorithm for integer factorization is the general number field sieve, which takes time O(e(64/9)1/3(n.log 2)1/3(log (n.log 2))2/3) to factor an n-bit integer. However, the best known quantum algorithm for this problem, Shor's algorithm, does run in polynomial time. Unfortunately, this fact doesn't say much about where the problem lies with respect to non-quantum complexity classes.", "question_id": "56e1ec83cd28a01900c67c0c", "passage_id": "ed76587b-b463-4bcf-a11d-2f7cb873fcc4", "answer": "modern cryptographic systems", "title": "Computational_complexity_theory"}
{"input": "What is Southern California often abbreviated as?", "result": "Southern California, often abbreviated SoCal, is a geographic and cultural region that generally comprises California's southernmost 10 counties. The region is traditionally described as \"eight counties\", based on demographics and economic ties: Imperial, Los Angeles, Orange, Riverside, San Bernardino, San Diego, Santa Barbara, and Ventura. The more extensive 10-county definition, including Kern and San Luis Obispo counties, is also used based on historical political divisions. Southern California is a major economic center for the state of California and the United States.", "question_id": "5705e26d75f01819005e76d4", "passage_id": "bc865c9b-e43b-4bec-9b2a-4495522cb762", "answer": "SoCal", "title": "Southern_California"}
{"input": "Complexity classes are generally classified into what?", "result": "Of course, some complexity classes have complicated definitions that do not fit into this framework. Thus, a typical complexity class has a definition like the following:", "question_id": "56e1c0f6cd28a01900c67b2d", "passage_id": "12da6dc8-bd6d-44ab-a7b3-1da40ec275fa", "answer": "framework", "title": "Computational_complexity_theory"}
{"input": "What is another name for any given measure of input associated with a problem?", "result": "A computational problem can be viewed as an infinite collection of instances together with a solution for every instance. The input string for a computational problem is referred to as a problem instance, and should not be confused with the problem itself. In computational complexity theory, a problem refers to the abstract question to be solved. In contrast, an instance of this problem is a rather concrete utterance, which can serve as the input for a decision problem. For example, consider the problem of primality testing. The instance is a number (e.g. 15) and the solution is \"yes\" if the number is prime and \"no\" otherwise (in this case \"no\"). Stated another way, the instance is a particular input to the problem, and the solution is the output corresponding to the given input.", "question_id": "56e17a7ccd28a01900c679a4", "passage_id": "bf273131-e053-401b-818f-e38993717a6c", "answer": "instances", "title": "Computational_complexity_theory"}
{"input": "What is typically used to broadly define complexity measures?", "result": "Analogous definitions can be made for space requirements. Although time and space are the most well-known complexity resources, any complexity measure can be viewed as a computational resource. Complexity measures are very generally defined by the Blum complexity axioms. Other complexity measures used in complexity theory include communication complexity, circuit complexity, and decision tree complexity.", "question_id": "56e1b754cd28a01900c67abe", "passage_id": "5c0a423f-5e5a-4d32-91d0-7f12b98ad5d6", "answer": "Blum complexity axioms", "title": "Computational_complexity_theory"}
{"input": "What theorems are responsible for determining questions of time and space requirements?", "result": "For the complexity classes defined in this way, it is desirable to prove that relaxing the requirements on (say) computation time indeed defines a bigger set of problems. In particular, although DTIME(n) is contained in DTIME(n2), it would be interesting to know if the inclusion is strict. For time and space requirements, the answer to such questions is given by the time and space hierarchy theorems respectively. They are called hierarchy theorems because they induce a proper hierarchy on the classes defined by constraining the respective resources. Thus there are pairs of complexity classes such that one is properly included in the other. Having deduced such proper set inclusions, we can proceed to make quantitative statements about how much more additional time or space is needed in order to increase the number of problems that can be solved.", "question_id": "56e1c720e3433e140042316c", "passage_id": "453e6c9e-3d98-4778-8e06-adf4c3f89a30", "answer": "time and space hierarchy theorems", "title": "Computational_complexity_theory"}
{"input": "In what year did the Norman's invade at Bannow Bay?", "result": "The Normans had a profound effect on Irish culture and history after their invasion at Bannow Bay in 1169. Initially the Normans maintained a distinct culture and ethnicity. Yet, with time, they came to be subsumed into Irish culture to the point that it has been said that they became \"more Irish than the Irish themselves.\" The Normans settled mostly in an area in the east of Ireland, later known as the Pale, and also built many fine castles and settlements, including Trim Castle and Dublin Castle. Both cultures intermixed, borrowing from each other's language, culture and outlook. Norman descendants today can be recognised by their surnames. Names such as French, (De) Roche, Devereux, D'Arcy, Treacy and Lacy are particularly common in the southeast of Ireland, especially in the southern part of County Wexford where the first Norman settlements were established. Other Norman names such as Furlong predominate there. Another common Norman-Irish name was Morell (Murrell) derived from the French Norman name Morel. Other names beginning with Fitz (from the Norman for son) indicate Norman ancestry. These included Fitzgerald, FitzGibbons (Gibbons) dynasty, Fitzmaurice. Other families bearing such surnames as Barry (de Barra) and De B\u00farca (Burke) are also of Norman extraction.", "question_id": "56de179dcffd8e1900b4b5da", "passage_id": "6f7d5018-ea4a-49c2-b7f8-cc5a10873e63", "answer": "1169", "title": "Normans"}
{"input": "What two resources commonly consumed by alternate models are typically known to vary?", "result": "Many machine models different from the standard multi-tape Turing machines have been proposed in the literature, for example random access machines. Perhaps surprisingly, each of these models can be converted to another without providing any extra computational power. The time and memory consumption of these alternate models may vary. What all these models have in common is that the machines operate deterministically.", "question_id": "56e1b169cd28a01900c67a74", "passage_id": "e8eba1e6-dd9d-4b01-aac7-2e44f08bfafd", "answer": "time and memory", "title": "Computational_complexity_theory"}
{"input": "To what level would the polynomial time hierarchy collapse if graph isomorphism is NP-complete?", "result": "The graph isomorphism problem is the computational problem of determining whether two finite graphs are isomorphic. An important unsolved problem in complexity theory is whether the graph isomorphism problem is in P, NP-complete, or NP-intermediate. The answer is not known, but it is believed that the problem is at least not NP-complete. If graph isomorphism is NP-complete, the polynomial time hierarchy collapses to its second level. Since it is widely believed that the polynomial hierarchy does not collapse to any finite level, it is believed that graph isomorphism is not NP-complete. The best algorithm for this problem, due to Laszlo Babai and Eugene Luks has run time 2O(\u221a(n log(n))) for graphs with n vertices.", "question_id": "56e1e9dfe3433e14004231ff", "passage_id": "37a68415-b154-42b5-be79-c53717109c36", "answer": "second level", "title": "Computational_complexity_theory"}
{"input": "What is the name given to the input string of a computational problem?", "result": "A computational problem can be viewed as an infinite collection of instances together with a solution for every instance. The input string for a computational problem is referred to as a problem instance, and should not be confused with the problem itself. In computational complexity theory, a problem refers to the abstract question to be solved. In contrast, an instance of this problem is a rather concrete utterance, which can serve as the input for a decision problem. For example, consider the problem of primality testing. The instance is a number (e.g. 15) and the solution is \"yes\" if the number is prime and \"no\" otherwise (in this case \"no\"). Stated another way, the instance is a particular input to the problem, and the solution is the output corresponding to the given input.", "question_id": "56e17a7ccd28a01900c679a1", "passage_id": "bf273131-e053-401b-818f-e38993717a6c", "answer": "problem instance", "title": "Computational_complexity_theory"}
{"input": "What provides a solution to a list of integers provided as input that ned to be sorted?", "result": "For example, consider the deterministic sorting algorithm quicksort. This solves the problem of sorting a list of integers that is given as the input. The worst-case is when the input is sorted or sorted in reverse order, and the algorithm takes time O(n2) for this case. If we assume that all possible permutations of the input list are equally likely, the average time taken for sorting is O(n log n). The best case occurs when each pivoting divides the list in half, also needing O(n log n) time.", "question_id": "56e1ba41cd28a01900c67ae0", "passage_id": "08ca2652-2c44-4068-9879-3af53acd0ce9", "answer": "deterministic sorting algorithm quicksort", "title": "Computational_complexity_theory"}
{"input": "Turing machines are commonly employed to define what? ", "result": "Many types of Turing machines are used to define complexity classes, such as deterministic Turing machines, probabilistic Turing machines, non-deterministic Turing machines, quantum Turing machines, symmetric Turing machines and alternating Turing machines. They are all equally powerful in principle, but when resources (such as time or space) are bounded, some of these may be more powerful than others.", "question_id": "56e1b00ce3433e140042309e", "passage_id": "97dfd590-9874-4355-b6e1-0a6fbb69d3f5", "answer": "complexity classes", "title": "Computational_complexity_theory"}
{"input": "What will the output be for a member of the language of a decision problem?", "result": "Decision problems are one of the central objects of study in computational complexity theory. A decision problem is a special type of computational problem whose answer is either yes or no, or alternately either 1 or 0. A decision problem can be viewed as a formal language, where the members of the language are instances whose output is yes, and the non-members are those instances whose output is no. The objective is to decide, with the aid of an algorithm, whether a given input string is a member of the formal language under consideration. If the algorithm deciding this problem returns the answer yes, the algorithm is said to accept the input string, otherwise it is said to reject the input.", "question_id": "56e190bce3433e1400422fcb", "passage_id": "05cc2108-1875-41a2-b689-3dd64f313cfb", "answer": "yes", "title": "Computational_complexity_theory"}
{"input": "What is the expression used to represent a complexity class of counting problems?", "result": "Other important complexity classes include BPP, ZPP and RP, which are defined using probabilistic Turing machines; AC and NC, which are defined using Boolean circuits; and BQP and QMA, which are defined using quantum Turing machines. #P is an important complexity class of counting problems (not decision problems). Classes like IP and AM are defined using Interactive proof systems. ALL is the class of all decision problems.", "question_id": "56e1c4fce3433e1400423151", "passage_id": "0fa41c46-c70f-486a-9961-b8b4b09b48ca", "answer": "#P", "title": "Computational_complexity_theory"}
{"input": "Communication complexity is an example of what type of measure?", "result": "Analogous definitions can be made for space requirements. Although time and space are the most well-known complexity resources, any complexity measure can be viewed as a computational resource. Complexity measures are very generally defined by the Blum complexity axioms. Other complexity measures used in complexity theory include communication complexity, circuit complexity, and decision tree complexity.", "question_id": "56e1b754cd28a01900c67abf", "passage_id": "5c0a423f-5e5a-4d32-91d0-7f12b98ad5d6", "answer": "Complexity measures", "title": "Computational_complexity_theory"}
{"input": "When were the Normans in Normandy?", "result": "The Normans (Norman: Nourmands; French: Normands; Latin: Normanni) were the people who in the 10th and 11th centuries gave their name to Normandy, a region in France. They were descended from Norse (\"Norman\" comes from \"Norseman\") raiders and pirates from Denmark, Iceland and Norway who, under their leader Rollo, agreed to swear fealty to King Charles III of West Francia. Through generations of assimilation and mixing with the native Frankish and Roman-Gaulish populations, their descendants would gradually merge with the Carolingian-based cultures of West Francia. The distinct cultural and ethnic identity of the Normans emerged initially in the first half of the 10th century, and it continued to evolve over the succeeding centuries.", "question_id": "56ddde6b9a695914005b9629", "passage_id": "7151fb1c-d822-4256-9e9c-7c8f6d19dd00", "answer": "10th and 11th centuries", "title": "Normans"}
{"input": "What is the paper written by Richard Karp in 1972 that ushered in a new era of understanding between intractability and NP-complete problems?", "result": "In 1967, Manuel Blum developed an axiomatic complexity theory based on his axioms and proved an important result, the so-called, speed-up theorem. The field really began to flourish in 1971 when the US researcher Stephen Cook and, working independently, Leonid Levin in the USSR, proved that there exist practically relevant problems that are NP-complete. In 1972, Richard Karp took this idea a leap forward with his landmark paper, \"Reducibility Among Combinatorial Problems\", in which he showed that 21 diverse combinatorial and graph theoretical problems, each infamous for its computational intractability, are NP-complete.", "question_id": "56e20a3ae3433e140042324d", "passage_id": "bb5db76b-47d8-41aa-a281-ad03eeb424a8", "answer": "\"Reducibility Among Combinatorial Problems\"", "title": "Computational_complexity_theory"}
{"input": "How many combinatory and graph theoretical problems, formerly believed to be plagued by intractability, did Karp's paper address?", "result": "In 1967, Manuel Blum developed an axiomatic complexity theory based on his axioms and proved an important result, the so-called, speed-up theorem. The field really began to flourish in 1971 when the US researcher Stephen Cook and, working independently, Leonid Levin in the USSR, proved that there exist practically relevant problems that are NP-complete. In 1972, Richard Karp took this idea a leap forward with his landmark paper, \"Reducibility Among Combinatorial Problems\", in which he showed that 21 diverse combinatorial and graph theoretical problems, each infamous for its computational intractability, are NP-complete.", "question_id": "56e20a3ae3433e140042324e", "passage_id": "bb5db76b-47d8-41aa-a281-ad03eeb424a8", "answer": "21", "title": "Computational_complexity_theory"}
{"input": "What were Isaac's chains made out of?", "result": "Various princes of the Holy Land arrived in Limassol at the same time, in particular Guy de Lusignan. All declared their support for Richard provided that he support Guy against his rival Conrad of Montferrat. The local barons abandoned Isaac, who considered making peace with Richard, joining him on the crusade, and offering his daughter in marriage to the person named by Richard. But Isaac changed his mind and tried to escape. Richard then proceeded to conquer the whole island, his troops being led by Guy de Lusignan. Isaac surrendered and was confined with silver chains, because Richard had promised that he would not place him in irons. By 1 June, Richard had conquered the whole island. His exploit was well publicized and contributed to his reputation; he also derived significant financial gains from the conquest of the island. Richard left for Acre on 5 June, with his allies. Before his departure, he named two of his Norman generals, Richard de Camville and Robert de Thornham, as governors of Cyprus.", "question_id": "56de40da4396321400ee2709", "passage_id": "8f42ecdb-7fdb-49f3-bed5-6867b20eaba8", "answer": "silver", "title": "Normans"}
{"input": "In what year did Raymond Sullivan publish a study of rudimentary sets?", "result": "Earlier papers studying problems solvable by Turing machines with specific bounded resources include  John Myhill's definition of linear bounded automata (Myhill 1960), Raymond Smullyan's study of rudimentary sets (1961), as well as Hisao Yamada's paper on real-time computations (1962). Somewhat earlier, Boris Trakhtenbrot (1956), a pioneer in the field from the USSR, studied another specific complexity measure. As he remembers:", "question_id": "56e2042ecd28a01900c67c1f", "passage_id": "f7121482-e671-4445-8c36-e12812f83aa4", "answer": "1961", "title": "Computational_complexity_theory"}
{"input": "Who upon arriving gave the original viking settlers a common identity?", "result": "Before Rollo's arrival, its populations did not differ from Picardy or the \u00cele-de-France, which were considered \"Frankish\". Earlier Viking settlers had begun arriving in the 880s, but were divided between colonies in the east (Roumois and Pays de Caux) around the low Seine valley and in the west in the Cotentin Peninsula, and were separated by traditional pagii, where the population remained about the same with almost no foreign settlers. Rollo's contingents who raided and ultimately settled Normandy and parts of the Atlantic coast included Danes, Norwegians, Norse\u2013Gaels, Orkney Vikings, possibly Swedes, and Anglo-Danes from the English Danelaw under Norse control.", "question_id": "56dde1d966d3e219004dad8d", "passage_id": "a3352285-e163-4d6f-99c1-faf26239b8fd", "answer": "Rollo", "title": "Normans"}
{"input": "What class is most commonly not ascribed to the graph isomorphism problem in spite of definitive determination?", "result": "The graph isomorphism problem is the computational problem of determining whether two finite graphs are isomorphic. An important unsolved problem in complexity theory is whether the graph isomorphism problem is in P, NP-complete, or NP-intermediate. The answer is not known, but it is believed that the problem is at least not NP-complete. If graph isomorphism is NP-complete, the polynomial time hierarchy collapses to its second level. Since it is widely believed that the polynomial hierarchy does not collapse to any finite level, it is believed that graph isomorphism is not NP-complete. The best algorithm for this problem, due to Laszlo Babai and Eugene Luks has run time 2O(\u221a(n log(n))) for graphs with n vertices.", "question_id": "56e1e9dfe3433e14004231fd", "passage_id": "37a68415-b154-42b5-be79-c53717109c36", "answer": "NP-complete", "title": "Computational_complexity_theory"}
{"input": "If P is ultimately proven to be equal tot NP, what effect would this have on the efficiency of problems?", "result": "The question of whether P equals NP is one of the most important open questions in theoretical computer science because of the wide implications of a solution. If the answer is yes, many important problems can be shown to have more efficient solutions. These include various types of integer programming problems in operations research, many problems in logistics, protein structure prediction in biology, and the ability to find formal proofs of pure mathematics theorems. The P versus NP problem is one of the Millennium Prize Problems proposed by the Clay Mathematics Institute. There is a US$1,000,000 prize for resolving the problem.", "question_id": "56e1ddfce3433e14004231d5", "passage_id": "c7753f54-aa7d-4939-a7f5-49c25616d28c", "answer": "more efficient solutions", "title": "Computational_complexity_theory"}
{"input": "What are three examples of complexity classes associated with definitions established by probabilistic Turing machines?", "result": "Other important complexity classes include BPP, ZPP and RP, which are defined using probabilistic Turing machines; AC and NC, which are defined using Boolean circuits; and BQP and QMA, which are defined using quantum Turing machines. #P is an important complexity class of counting problems (not decision problems). Classes like IP and AM are defined using Interactive proof systems. ALL is the class of all decision problems.", "question_id": "56e1c4fce3433e140042314e", "passage_id": "0fa41c46-c70f-486a-9961-b8b4b09b48ca", "answer": "BPP, ZPP and RP", "title": "Computational_complexity_theory"}
{"input": "What has complicated definitions that prevent classification into a framework?", "result": "Of course, some complexity classes have complicated definitions that do not fit into this framework. Thus, a typical complexity class has a definition like the following:", "question_id": "56e1c0f6cd28a01900c67b2c", "passage_id": "12da6dc8-bd6d-44ab-a7b3-1da40ec275fa", "answer": "complexity classes", "title": "Computational_complexity_theory"}
{"input": "What computational problem is commonly associated with prime factorization?", "result": "The integer factorization problem is the computational problem of determining the prime factorization of a given integer. Phrased as a decision problem, it is the problem of deciding whether the input has a factor less than k. No efficient integer factorization algorithm is known, and this fact forms the basis of several modern cryptographic systems, such as the RSA algorithm. The integer factorization problem is in NP and in co-NP (and even in UP and co-UP). If the problem is NP-complete, the polynomial time hierarchy will collapse to its first level (i.e., NP will equal co-NP). The best known algorithm for integer factorization is the general number field sieve, which takes time O(e(64/9)1/3(n.log 2)1/3(log (n.log 2))2/3) to factor an n-bit integer. However, the best known quantum algorithm for this problem, Shor's algorithm, does run in polynomial time. Unfortunately, this fact doesn't say much about where the problem lies with respect to non-quantum complexity classes.", "question_id": "56e1ec83cd28a01900c67c0a", "passage_id": "ed76587b-b463-4bcf-a11d-2f7cb873fcc4", "answer": "The integer factorization problem", "title": "Computational_complexity_theory"}
{"input": "What implication can be derived for P and NP if P and co-NP are established to be unequal?", "result": "Along the same lines, co-NP is the class containing the complement problems (i.e. problems with the yes/no answers reversed) of NP problems. It is believed that NP is not equal to co-NP; however, it has not yet been proven. It has been shown that if these two complexity classes are not equal then P is not equal to NP.", "question_id": "56e1efa0e3433e140042321d", "passage_id": "3cfe86c8-8758-4fb1-b49e-df2f982950e4", "answer": "P is not equal to NP", "title": "Computational_complexity_theory"}
{"input": "What is the example of another problem characterized by large instances that is routinely solved by SAT handlers employing efficient algorithms?", "result": "What intractability means in practice is open to debate. Saying that a problem is not in P does not imply that all large cases of the problem are hard or even that most of them are. For example, the decision problem in Presburger arithmetic has been shown not to be in P, yet algorithms have been written that solve the problem in reasonable times in most cases. Similarly, algorithms can solve the NP-complete knapsack problem over a wide range of sizes in less than quadratic time and SAT solvers routinely handle large instances of the NP-complete Boolean satisfiability problem.", "question_id": "56e1febfe3433e140042323a", "passage_id": "9e0c5bbb-6d28-4de4-a1a4-7eaf291de4a9", "answer": "NP-complete Boolean satisfiability problem", "title": "Computational_complexity_theory"}
{"input": "Who are commonly associated with the algorithm typically considered the most effective with respect to finite polynomial hierarchy and graph isomorphism?", "result": "The graph isomorphism problem is the computational problem of determining whether two finite graphs are isomorphic. An important unsolved problem in complexity theory is whether the graph isomorphism problem is in P, NP-complete, or NP-intermediate. The answer is not known, but it is believed that the problem is at least not NP-complete. If graph isomorphism is NP-complete, the polynomial time hierarchy collapses to its second level. Since it is widely believed that the polynomial hierarchy does not collapse to any finite level, it is believed that graph isomorphism is not NP-complete. The best algorithm for this problem, due to Laszlo Babai and Eugene Luks has run time 2O(\u221a(n log(n))) for graphs with n vertices.", "question_id": "56e1e9dfe3433e1400423200", "passage_id": "37a68415-b154-42b5-be79-c53717109c36", "answer": "Laszlo Babai and Eugene Luks", "title": "Computational_complexity_theory"}
{"input": "Decision problems capable of being solved by a deterministic Turing machine while maintaining adherence to polynomial time belong to what class?", "result": "But bounding the computation time above by some concrete function f(n) often yields complexity classes that depend on the chosen machine model. For instance, the language {xx | x is any binary string} can be solved in linear time on a multi-tape Turing machine, but necessarily requires quadratic time in the model of single-tape Turing machines. If we allow polynomial variations in running time, Cobham-Edmonds thesis states that \"the time complexities in any two reasonable and general models of computation are polynomially related\" (Goldreich 2008, Chapter 1.2). This forms the basis for the complexity class P, which is the set of decision problems solvable by a deterministic Turing machine within polynomial time. The corresponding set of function problems is FP.", "question_id": "56e1c2eee3433e1400423138", "passage_id": "948d365c-466e-451a-8cab-0beef9109ca1", "answer": "complexity class P", "title": "Computational_complexity_theory"}
{"input": "What is the term given to algorithms that utilize random bits?", "result": "A deterministic Turing machine is the most basic Turing machine, which uses a fixed set of rules to determine its future actions. A probabilistic Turing machine is a deterministic Turing machine with an extra supply of random bits. The ability to make probabilistic decisions often helps algorithms solve problems more efficiently. Algorithms that use random bits are called randomized algorithms. A non-deterministic Turing machine is a deterministic Turing machine with an added feature of non-determinism, which allows a Turing machine to have multiple possible future actions from a given state. One way to view non-determinism is that the Turing machine branches into many possible computational paths at each step, and if it solves the problem in any of these branches, it is said to have solved the problem. Clearly, this model is not meant to be a physically realizable model, it is just a theoretically interesting abstract machine that gives rise to particularly interesting complexity classes. For examples, see non-deterministic algorithm.", "question_id": "56e1aff7cd28a01900c67a6c", "passage_id": "20169cdc-5bb5-42e3-9321-621344828e95", "answer": "randomized algorithms", "title": "Computational_complexity_theory"}
{"input": "What major conquest did Tancred play a roll in?", "result": "In 1096, Crusaders passing by the siege of Amalfi were joined by Bohemond of Taranto and his nephew Tancred with an army of Italo-Normans. Bohemond was the de facto leader of the Crusade during its passage through Asia Minor. After the successful Siege of Antioch in 1097, Bohemond began carving out an independent principality around that city. Tancred was instrumental in the conquest of Jerusalem and he worked for the expansion of the Crusader kingdom in Transjordan and the region of Galilee.[citation needed]", "question_id": "56de3ebc4396321400ee26e8", "passage_id": "70e77e2d-85f0-4684-afdc-894a0028f9ab", "answer": "Jerusalem", "title": "Normans"}
{"input": "A specific algorithm demonstrating T(n) represents what measure of time complexity?", "result": "To classify the computation time (or similar resources, such as space consumption), one is interested in proving upper and lower bounds on the minimum amount of time required by the most efficient algorithm solving a given problem. The complexity of an algorithm is usually taken to be its worst-case complexity, unless specified otherwise. Analyzing a particular algorithm falls under the field of analysis of algorithms. To show an upper bound T(n) on the time complexity of a problem, one needs to show only that there is a particular algorithm with running time at most T(n). However, proving lower bounds is much more difficult, since lower bounds make a statement about all possible algorithms that solve a given problem. The phrase \"all possible algorithms\" includes not just the algorithms known today, but any algorithm that might be discovered in the future. To show a lower bound of T(n) for a problem requires showing that no algorithm can have time complexity lower than T(n).", "question_id": "56e1bc3ae3433e1400423107", "passage_id": "b1df1362-8388-4b9a-ab5a-572631c50f9d", "answer": "upper bound", "title": "Computational_complexity_theory"}
{"input": "Classification of resources is contingent on determining the upper and lower bounds of minimum time required by what?  ", "result": "To classify the computation time (or similar resources, such as space consumption), one is interested in proving upper and lower bounds on the minimum amount of time required by the most efficient algorithm solving a given problem. The complexity of an algorithm is usually taken to be its worst-case complexity, unless specified otherwise. Analyzing a particular algorithm falls under the field of analysis of algorithms. To show an upper bound T(n) on the time complexity of a problem, one needs to show only that there is a particular algorithm with running time at most T(n). However, proving lower bounds is much more difficult, since lower bounds make a statement about all possible algorithms that solve a given problem. The phrase \"all possible algorithms\" includes not just the algorithms known today, but any algorithm that might be discovered in the future. To show a lower bound of T(n) for a problem requires showing that no algorithm can have time complexity lower than T(n).", "question_id": "56e1bc3ae3433e1400423104", "passage_id": "b1df1362-8388-4b9a-ab5a-572631c50f9d", "answer": "the most efficient algorithm", "title": "Computational_complexity_theory"}
{"input": "Who commissioned the Tapestry?", "result": "By far the most famous work of Norman art is the Bayeux Tapestry, which is not a tapestry but a work of embroidery. It was commissioned by Odo, the Bishop of Bayeux and first Earl of Kent, employing natives from Kent who were learned in the Nordic traditions imported in the previous half century by the Danish Vikings.", "question_id": "56de4c324396321400ee27ad", "passage_id": "8fbd6f64-cfce-4b9d-901f-77239d5b9574", "answer": "Odo", "title": "Normans"}
{"input": "What function is used by algorithms to define measurements like time or space?", "result": "Many important complexity classes can be defined by bounding the time or space used by the algorithm. Some important complexity classes of decision problems defined in this manner are the following:", "question_id": "56e1c3e1e3433e1400423149", "passage_id": "f6638171-d3db-4f06-b016-901742fce1d2", "answer": "bounding", "title": "Computational_complexity_theory"}
{"input": "What often affects or facilitates ease of analysis in computational problems?", "result": "However, some computational problems are easier to analyze in terms of more unusual resources. For example, a non-deterministic Turing machine is a computational model that is allowed to branch out to check many different possibilities at once. The non-deterministic Turing machine has very little to do with how we physically want to compute algorithms, but its branching exactly captures many of the mathematical models we want to analyze, so that non-deterministic time is a very important resource in analyzing computational problems.", "question_id": "56e1b355e3433e14004230b1", "passage_id": "414d14ed-c0ba-4609-a75c-000afe130778", "answer": "unusual resources", "title": "Computational_complexity_theory"}
{"input": "What is the term for a task that generally lends itself to being solved by a computer?", "result": "Computational complexity theory is a branch of the theory of computation in theoretical computer science that focuses on classifying computational problems according to their inherent difficulty, and relating those classes to each other. A computational problem is understood to be a task that is in principle amenable to being solved by a computer, which is equivalent to stating that the problem may be solved by mechanical application of mathematical steps, such as an algorithm.", "question_id": "56e16182e3433e1400422e2a", "passage_id": "0151d606-215d-4ab3-b7a0-68fc75cdd41c", "answer": "computational problems", "title": "Computational_complexity_theory"}
{"input": "How is the time needed to obtain the solution to a problem calculated?", "result": "To measure the difficulty of solving a computational problem, one may wish to see how much time the best algorithm requires to solve the problem. However, the running time may, in general, depend on the instance. In particular, larger instances will require more time to solve. Thus the time required to solve a problem (or the space required, or any measure of complexity) is calculated as a function of the size of the instance. This is usually taken to be the size of the input in bits. Complexity theory is interested in how algorithms scale with an increase in the input size. For instance, in the problem of finding whether a graph is connected, how much more time does it take to solve a problem for a graph with 2n vertices compared to the time taken for a graph with n vertices?", "question_id": "56e1a38de3433e140042305e", "passage_id": "325f502a-5cce-4f57-a9ac-40184e1ce815", "answer": "as a function of the size of the instance", "title": "Computational_complexity_theory"}
{"input": "What part of France were the Normans located?", "result": "The descendants of Rollo's Vikings and their Frankish wives would replace the Norse religion and Old Norse language with Catholicism (Christianity) and the Gallo-Romance language of the local people, blending their maternal Frankish heritage with Old Norse traditions and customs to synthesize a unique \"Norman\" culture in the north of France. The Norman language was forged by the adoption of the indigenous langue d'o\u00efl branch of Romance by a Norse-speaking ruling class, and it developed into the regional language that survives today.", "question_id": "56dde27d9a695914005b9652", "passage_id": "42899b51-b970-4c0e-8a3b-af4be4e8383e", "answer": "north", "title": "Normans"}
{"input": "Who was Guy's Rival?", "result": "Various princes of the Holy Land arrived in Limassol at the same time, in particular Guy de Lusignan. All declared their support for Richard provided that he support Guy against his rival Conrad of Montferrat. The local barons abandoned Isaac, who considered making peace with Richard, joining him on the crusade, and offering his daughter in marriage to the person named by Richard. But Isaac changed his mind and tried to escape. Richard then proceeded to conquer the whole island, his troops being led by Guy de Lusignan. Isaac surrendered and was confined with silver chains, because Richard had promised that he would not place him in irons. By 1 June, Richard had conquered the whole island. His exploit was well publicized and contributed to his reputation; he also derived significant financial gains from the conquest of the island. Richard left for Acre on 5 June, with his allies. Before his departure, he named two of his Norman generals, Richard de Camville and Robert de Thornham, as governors of Cyprus.", "question_id": "56de40da4396321400ee2708", "passage_id": "8f42ecdb-7fdb-49f3-bed5-6867b20eaba8", "answer": "Conrad of Montferrat", "title": "Normans"}
{"input": "What complexity class is characterized by a computational tasks and efficient algorithms?", "result": "The complexity class P is often seen as a mathematical abstraction modeling those computational tasks that admit an efficient algorithm. This hypothesis is called the Cobham\u2013Edmonds thesis. The complexity class NP, on the other hand, contains many problems that people would like to solve efficiently, but for which no efficient algorithm is known, such as the Boolean satisfiability problem, the Hamiltonian path problem and the vertex cover problem. Since deterministic Turing machines are special non-deterministic Turing machines, it is easily observed that each problem in P is also member of the class NP.", "question_id": "56e1dc62cd28a01900c67bca", "passage_id": "54a57d69-7098-4cd3-a23b-efa818ca1283", "answer": "P", "title": "Computational_complexity_theory"}
{"input": "What are the two simple word responses to a decision problem?", "result": "Decision problems are one of the central objects of study in computational complexity theory. A decision problem is a special type of computational problem whose answer is either yes or no, or alternately either 1 or 0. A decision problem can be viewed as a formal language, where the members of the language are instances whose output is yes, and the non-members are those instances whose output is no. The objective is to decide, with the aid of an algorithm, whether a given input string is a member of the formal language under consideration. If the algorithm deciding this problem returns the answer yes, the algorithm is said to accept the input string, otherwise it is said to reject the input.", "question_id": "56e190bce3433e1400422fc9", "passage_id": "05cc2108-1875-41a2-b689-3dd64f313cfb", "answer": "yes or no", "title": "Computational_complexity_theory"}
{"input": "What is the original meaning of the word Norman?", "result": "The English name \"Normans\" comes from the French words Normans/Normanz, plural of Normant, modern French normand, which is itself borrowed from Old Low Franconian Nortmann \"Northman\" or directly from Old Norse Nor\u00f0ma\u00f0r, Latinized variously as Nortmannus, Normannus, or Nordmannus (recorded in Medieval Latin, 9th century) to mean \"Norseman, Viking\".", "question_id": "56dde0379a695914005b9636", "passage_id": "fc670594-9981-4a7e-89ab-9bdc5c2c1f51", "answer": "Viking", "title": "Normans"}
{"input": "How many men were in Robert's army?", "result": "Robert Guiscard, an other Norman adventurer previously elevated to the dignity of count of Apulia as the result of his military successes, ultimately drove the Byzantines out of southern Italy. Having obtained the consent of pope Gregory VII and acting as his vassal, Robert continued his campaign conquering the Balkan peninsula as a foothold for western feudal lords and the Catholic Church. After allying himself with Croatia and the Catholic cities of Dalmatia, in 1081 he led an army of 30,000 men in 300 ships landing on the southern shores of Albania, capturing Valona, Kanina, Jericho (Orikumi), and reaching Butrint after numerous pillages. They joined the fleet that had previously conquered Corfu and attacked Dyrrachium from land and sea, devastating everything along the way. Under these harsh circumstances, the locals accepted the call of emperor Alexius I Comnenus to join forces with the Byzantines against the Normans. The Albanian forces could not take part in the ensuing battle because it had started before their arrival. Immediately before the battle, the Venetian fleet had secured a victory in the coast surrounding the city. Forced to retreat, Alexius ceded the command to a high Albanian official named Comiscortes in the service of Byzantium. The city's garrison resisted until February 1082, when Dyrrachium was betrayed to the Normans by the Venetian and Amalfitan merchants who had settled there. The Normans were now free to penetrate into the hinterland; they took Ioannina and some minor cities in southwestern Macedonia and Thessaly before appearing at the gates of Thessalonica. Dissension among the high ranks coerced the Normans to retreat to Italy. They lost Dyrrachium, Valona, and Butrint in 1085, after the death of Robert.", "question_id": "56de148dcffd8e1900b4b5be", "passage_id": "e673cc63-9c67-4b33-b482-8266b621457f", "answer": "30,000", "title": "Normans"}
{"input": "Resources are constrained by hierarchy theorems to produce what?", "result": "For the complexity classes defined in this way, it is desirable to prove that relaxing the requirements on (say) computation time indeed defines a bigger set of problems. In particular, although DTIME(n) is contained in DTIME(n2), it would be interesting to know if the inclusion is strict. For time and space requirements, the answer to such questions is given by the time and space hierarchy theorems respectively. They are called hierarchy theorems because they induce a proper hierarchy on the classes defined by constraining the respective resources. Thus there are pairs of complexity classes such that one is properly included in the other. Having deduced such proper set inclusions, we can proceed to make quantitative statements about how much more additional time or space is needed in order to increase the number of problems that can be solved.", "question_id": "56e1c720e3433e140042316d", "passage_id": "453e6c9e-3d98-4778-8e06-adf4c3f89a30", "answer": "a proper hierarchy on the classes defined", "title": "Computational_complexity_theory"}
{"input": "What are two complexity classes between L and P?", "result": "Similarly, it is not known if L (the set of all problems that can be solved in logarithmic space) is strictly contained in P or equal to P. Again, there are many complexity classes between the two, such as NL and NC, and it is not known if they are distinct or equal classes.", "question_id": "56e1f10ee3433e1400423225", "passage_id": "1f430ecf-2b9b-424a-8b2d-0f4d36d07050", "answer": "NL and NC", "title": "Computational_complexity_theory"}
{"input": "How long did Western Europe control Cyprus?", "result": "The conquest of Cyprus by the Anglo-Norman forces of the Third Crusade opened a new chapter in the history of the island, which would be under Western European domination for the following 380 years. Although not part of a planned operation, the conquest had much more permanent results than initially expected.", "question_id": "56de3efccffd8e1900b4b6fe", "passage_id": "d3b4fc0d-fa42-42df-978e-9904f51e6c78", "answer": "380 years", "title": "Normans"}
{"input": "What is the term used to identify a deterministic Turing machine that has additional random bits?", "result": "A deterministic Turing machine is the most basic Turing machine, which uses a fixed set of rules to determine its future actions. A probabilistic Turing machine is a deterministic Turing machine with an extra supply of random bits. The ability to make probabilistic decisions often helps algorithms solve problems more efficiently. Algorithms that use random bits are called randomized algorithms. A non-deterministic Turing machine is a deterministic Turing machine with an added feature of non-determinism, which allows a Turing machine to have multiple possible future actions from a given state. One way to view non-determinism is that the Turing machine branches into many possible computational paths at each step, and if it solves the problem in any of these branches, it is said to have solved the problem. Clearly, this model is not meant to be a physically realizable model, it is just a theoretically interesting abstract machine that gives rise to particularly interesting complexity classes. For examples, see non-deterministic algorithm.", "question_id": "56e1aff7cd28a01900c67a6a", "passage_id": "20169cdc-5bb5-42e3-9321-621344828e95", "answer": "A probabilistic Turing machine", "title": "Computational_complexity_theory"}
